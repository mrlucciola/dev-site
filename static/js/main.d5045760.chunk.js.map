{"version":3,"sources":["images/envest-preview.png","images/diffuse-preview.png","images/bda-preview.png","images/cofi-preview.png","redux/types/projectTypes.js","redux/reducers/projectReducer.js","redux/reducers/baseReducer.js","redux/store.js","redux/actions/projectActions.js","util/slugify.js","components/projects/projectNav/ProjectNav.jsx","components/projects/projectPreview/ProjectPreview.jsx","components/projects/projectDescription/ProjectDescription.jsx","components/projects/projectStack/ProjectStack.jsx","components/projects/Project.jsx","components/projects/ProjectList.jsx","components/body/Body.jsx","projectObjectsArr.js","components/Nav.jsx","App.js","reportWebVitals.js","index.js"],"names":["CURRENT_PROJECT","UPDATE_PROJECT_OBJ_ARR","initialState","currentProject","projectObjArr","combineReducers","base","state","action","type","project","types","middleware","thunk","store","createStore","baseReducer","applyMiddleware","updateCurrentProject","payload","dispatch","slugify","string","a","p","RegExp","split","join","toString","toLowerCase","replace","c","charAt","indexOf","ProjectNav","title","repoURL","siteURL","className","href","ProjectPreview","_imgURL","imgURL","src","default","alt","ProjectDescription","description","ProjectStack","stackObj","stackElemArr","key","toolsElemArr","map","tool","idx","push","buildStackElem","onEventActivateProject","projectObj","isActive","window","history","replaceState","location","origin","Project","useDispatch","useSelector","id","onScroll","onMouseOver","ProjectList","s","console","log","length","Body","projectObjectsArr","frontend","backend","require","NavProject","onClick","newLocation","Nav","_projectObjectsArr","scroll","App","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5045760.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/envest-preview.872297a0.png\";","export default __webpack_public_path__ + \"static/media/diffuse-preview.4f26af73.png\";","export default __webpack_public_path__ + \"static/media/bda-preview.8b46985a.png\";","export default __webpack_public_path__ + \"static/media/cofi-preview.d777f888.png\";","export const CURRENT_PROJECT = \"CURRENT_PROJECT\";\nexport const UPDATE_PROJECT_OBJ_ARR = \"UPDATE_PROJECT_OBJ_ARR\";\n","// types\nimport * as types from \"../types/projectTypes\";\n// initial state\nconst initialState = {\n  currentProject: {},\n  projectObjArr: [],\n};\n\n// main\nexport default function ProjectReducer(state = initialState, action) {\n  switch (action[\"type\"]) {\n    case types.CURRENT_PROJECT:\n      return { ...state, currentProject: action[\"payload\"] };\n    case types.UPDATE_PROJECT_OBJ_ARR:\n      return { ...state, projectObjArr: action[\"payload\"] };\n    default:\n      return { ...state };\n  }\n}\n","// modules\nimport {combineReducers} from 'redux';\n// redux\nimport ProjectReducer from './projectReducer';\n\n// main\nconst BaseReducer = (state = {}, action) => {\n    switch(action.type) {\n        default: return {...state};\n    }\n}\n\n// main\nexport default combineReducers({\n    base: BaseReducer,\n    project: ProjectReducer,\n})","// modules\nimport {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\n// redux\nimport baseReducer from './reducers/baseReducer';\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    baseReducer,\n    {},\n    applyMiddleware(...middleware)\n);\nexport default store;","import * as types from \"../types/projectTypes\";\n\nexport const updateCurrentProject = payload => dispatch => {\n  dispatch({\n    type: types.CURRENT_PROJECT,\n    payload,\n  });\n};\n\nexport const updateProjectObjArr = payload => dispatch => {\n  dispatch({\n    type: types.UPDATE_PROJECT_OBJ_ARR,\n    payload,\n  });\n};\n","export const slugify = (string) => {\n    const a = 'àáâäæãåāăąçćčđďèéêëēėęěğǵḧîïíīįìłḿñńǹňôöòóœøōõőṕŕřßśšşșťțûüùúūǘůűųẃẍÿýžźż·/_,:;'\n    const b = 'aaaaaaaaaacccddeeeeeeeegghiiiiiilmnnnnoooooooooprrsssssttuuuuuuuuuwxyyzzz------'\n    const p = new RegExp(a.split('').join('|'), 'g')\n  \n    return string.toString().toLowerCase()\n        .replace(' ', '-') // Replace spaces with -\n        .replace(p, c => b.charAt(a.indexOf(c))) // Replace special characters\n        .replace('&', '-and-') // Replace & with 'and'\n        .replace(/\\W/g, '') // Remove all non-word characters\n        .replace('----', '-').replace('---', '-').replace('--', '-') // Replace multiple - with single -\n        .replace(/^-+/, '') // Trim - from start of text\n        .replace(/-+$/, '') // Trim - from end of text\n}","// App > Main > Body > Project > ProjectNav\n// react\nimport React from \"react\";\n// style\nimport \"./ProjectNav.css\";\n\n// main\nconst ProjectNav = ({ title, repoURL, siteURL }) => {\n\n  return (\n    <div className=\"ProjectNav\">\n      <div className=\"title\">{title}</div>\n      <div className=\"urls\">\n        {repoURL && (\n          <a className=\"repoURL\" href={repoURL}>\n            GitHub\n          </a>\n        )}\n        {siteURL && (\n          <a className=\"siteURL\" href={siteURL}>\n            Website\n          </a>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default ProjectNav;","// react\nimport React from \"react\";\n// style\nimport \"./ProjectPreview.css\";\n\n// main\nconst ProjectPreview = ({ imgURL, siteURL }) => {\n  const buildImgElem = (_imgURL, siteURL) => {\n    if (typeof _imgURL !== typeof \"\") {\n      return (\n        <div className=\"imgContainer\">\n          <img src={_imgURL.default} alt=\"\" className=\"preview-img\" />\n        </div>\n      );\n    }\n    return (\n      <div className=\"imgContainer\">\n        {/* <a target=\"imgLink\" rel=\"noopener noreferrer\" href={siteURL}> */}\n        <img src={_imgURL} alt=\"\" className=\"preview-img\" />\n        {/* </a> */}\n      </div>\n    );\n  };\n  return (\n    <div className=\"ProjectPreview\">\n      {imgURL && buildImgElem(imgURL, siteURL)}\n    </div>\n  );\n}\n\nexport default ProjectPreview;","// App > Main > Body > Project > ProjectDescription\n// react\nimport React from 'react';\n// style\nimport './ProjectDescription.css'\n\n// main\nexport default function ProjectDescription({description}){\n    return(\n        <div className=\"ProjectDescription\">\n            <div className=\"text\">\n                {description && description}\n            </div>\n        </div>\n    )\n}","// App > Main > Body > Project > ProjectStack\n// react\nimport React from 'react';\n// style\nimport './ProjectStack.css'\n\n// main\nexport default function ProjectStack({stackObj}){\n    // destructuring\n    // let {} = stackObj;\n    // build fxns\n    const buildStackElem = () => {\n        // holds our whole stack\n        let stackElemArr = []\n\n        if (typeof stackObj !== typeof {}) {\n            return <div className=\"notstack\"></div>\n        }\n        for (const key in stackObj) {\n            const toolsArr = stackObj[key]\n            const toolsElemArr = toolsArr.map((tool, idx) => {\n                return (\n                    <div className={`${key} tool`} key={`${key}-${tool}-${idx}`}>{tool}</div>\n                )\n            })\n            stackElemArr.push(\n            <div className={`${key} group`}>\n                <div className=\"group-title\">{key} </div>\n                <div className=\"group-list\">{toolsElemArr} </div>\n            </div>\n            )\n        }\n        return stackElemArr\n    }\n    return(\n        <div className=\"ProjectStack\">\n            {buildStackElem()}\n        </div>\n    )\n}","// react\nimport React from \"react\";\n// redux\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateCurrentProject } from \"../../redux/actions/projectActions\";\n// utils\nimport { slugify } from \"../../util/slugify\";\n// components\nimport ProjectNav from \"./projectNav/ProjectNav\";\nimport ProjectPreview from \"./projectPreview/ProjectPreview\";\nimport ProjectDescription from \"./projectDescription/ProjectDescription\";\nimport ProjectStack from \"./projectStack/ProjectStack\";\n// style\nimport \"./Project.css\";\n// event handlers\nconst onEventActivateProject = ({\n  projectObj,\n  isActive,\n  dispatch,\n}) => {\n  if (!isActive) {\n    dispatch(updateCurrentProject(projectObj));\n    window.history.replaceState(\n      null,\n      null,\n      `${window.location.origin}#${slugify(projectObj[\"title\"])}`\n    );\n  }\n};\n\n/** \n * main\n*/\nconst Project = ({ projectObj }) => {\n  // init hooks\n  let dispatch = useDispatch();\n  // destructure\n  const { title, siteURL, description, stackObj, imgURL, repoURL } = projectObj;\n  // state\n  const currentProjectTitle = useSelector(state => state.project.currentProject.title);\n\n  const isActive = title === currentProjectTitle;\n\n  return (\n    <div\n      id={slugify(title)}\n      className={`Project ${isActive ? \"active\" : \"\"} w100`}\n      onScroll={() => {\n        onEventActivateProject({ projectObj, dispatch, isActive });\n      }}\n      onMouseOver={() => {\n        onEventActivateProject({ projectObj, dispatch, isActive });\n      }}\n    >\n      <ProjectNav title={title} repoURL={repoURL} siteURL={siteURL} />\n      <ProjectPreview imgURL={imgURL} siteURL={siteURL} />\n      <div className=\"bottom\">\n        <ProjectDescription description={description} />\n        <ProjectStack stackObj={stackObj} />\n      </div>\n    </div>\n  );\n}\n\nexport default Project;\n","// react\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\n// components\nimport Project from \"./Project\";\n// constants\n\n/**\n * main\n */\nconst ProjectList = () => {\n  // state\n  const projectObjArr = useSelector(s => s.project.projectObjArr);\n  console.log(projectObjArr)\n  // build\n  const buildProjectElems = () => {\n    return projectObjArr.map((projectObj, idx) => {\n      return <Project projectObj={projectObj} key={`p-o-${idx}`} />;\n    });\n  };\n\n  return projectObjArr.length > 0 ? (\n    <div className=\"ProjectList\">{buildProjectElems()}</div>\n  ) : (<div />);\n}\n\nexport default ProjectList;","// react\nimport React from \"react\";\n// components\nimport ProjectList from \"../projects/ProjectList\";\n// import Progress from './progress/Progress';\n// import Intro from './Intro';\n// style\nimport \"./Body.css\";\n\n// main\nconst Body = () => {\n  return (\n    <div className=\"Body\">\n      {/* <Progress /> */}\n      {/* <Intro /> */}\n      <ProjectList />\n    </div>\n  );\n};\nexport default Body;\n","export const projectObjectsArr = [\n  // {\n  // title: \"Custom Admin\",\n  // },\n  // {\n  //     title: \"Tascal\",\n  //     repoURL: \"https://github.com/mrlucciola/Tascal.git\",\n  //     siteURL: \"https://tascal.dev\",\n  //     description: `\\\n  //         Project management, scheduling, productivity-tracking, and note taking app.\n  //     `,\n  //     stackObj: {\n  //         frontend: ['React.js', 'Redux.js'],\n  //         backend: ['MongoDB, Node.js, Django, Python'],\n  //     },\n  //     imgURL: \"/assets/images/Tascal-preview.png\",\n  // },\n  {\n    title: \"PitchClean (f.k.a. Envest)\",\n    repoURL: \"https://github.com/pitch-clean/client-ui\",\n    siteURL: \"https://envest.pro/\",\n    description: `\\\n      Social media investment platform focused on renewables (backend disabled, profiles disabled, project suspended)\n    `,\n    stackObj: {\n      frontend: [\"React.js\", \"D3.js\", \"Redux.js\"],\n      backend: [\"MongoDB\", \"Node.js\", \"Express.js\"],\n    },\n    imgURL: require(\"./images/envest-preview.png\"),\n  },\n  {\n    title: \"Diffuse\",\n    repoURL: \"https://github.com/mrlucciola/diffuse.git\",\n    siteURL: \"https://diffuse.dev\",\n    description: `\\\n      Collaborative songwriting software.\\\n      Register, sign in, create and save projects to your profile.\\\n      Add others to contribute to your songs and track the history of the songs progression!\\\n    `,\n    stackObj: {\n      frontend: [\"React.js\", \"D3.js\", \"Redux.js\"],\n      backend: [\"MongoDB\", \"Node.js\", \"Django\", \"Django Rest Framework\"],\n    },\n    imgURL: require(\"./images/diffuse-preview.png\"),\n  },\n  {\n    title: \"BDA\",\n    repoURL: \"https://github.com/mrlucciola/bpm-detection-algorithm.git\",\n    siteURL: \"https://mrlucciola.github.io/bpm-detection-algorithm/\",\n    description: `\n      Detects BPM and displays track information from user-added songs using a simple peak-detection algorithm\n    `,\n    stackObj: {\n      frontend: [\"JavaScript (ES6)\", \"Web Audio API\", \"React\", \"Redux\"],\n    },\n    imgURL: require(\"./images/bda-preview.png\"),\n  },\n  {\n    title: \"Cofi\",\n    repoURL: \"https://github.com/mrlucciola/cofi.git\",\n    siteURL: \"https://mrlucciola.github.io/cofi/\",\n    description: `\\\n      A digital interface for synthesizing musical sequences in a step-wise manner.\\\n      Simply point and click on the note you want to activate, and the time at which to activate.\\\n    `,\n    stackObj: {\n      frontend: [\"React.js\", \"Web Audio API\", \"Redux.js\"],\n    },\n    imgURL: require(\"./images/cofi-preview.png\"),\n  },\n];\n","// react\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n// redux\nimport { updateCurrentProject } from \"../redux/actions/projectActions\";\n// utils\nimport { slugify } from \"../util/slugify\";\n// style\nimport \"./Nav.css\";\n// constants\nimport { projectObjectsArr } from \"../projectObjectsArr\";\n\nconst NavProject = ({ currentProject, idx, projectObj }) => {\n  // init hooks\n  let dispatch = useDispatch();\n\n  const { title } = projectObj;\n\n  return (\n    <div\n      className={`navProject ${currentProject.title === title ? \"active\" : \"\"}`}\n      onClick={() => {\n        let newLocation = `${window.location.origin}#${slugify(title)}`;\n        window.location = newLocation;\n        dispatch(updateCurrentProject(projectObj));\n      }}\n      key={`n-p-${idx}`}\n    >\n      {title}\n    </div>\n  );\n};\n\n/**\n * main\n */\nconst Nav = () => {\n  // state\n  let currentProject = useSelector(state => state.project.currentProject);\n  // build fxns\n  const buildProjectElemList = (\n    _projectObjectsArr,\n  ) => {\n    return _projectObjectsArr.map((projectObj, idx) => {\n      return <NavProject currentProject={currentProject} projectObj={projectObj} idx={idx} />;\n    });\n  };\n\n  return (\n    <div className=\"Nav\">\n      <div\n        className=\"home\"\n        onClick={() => {\n          window.scroll(0, 0);\n          window.location = `${window.location.origin}#`;\n        }}\n      >\n        Home\n      </div>\n      <div className=\"projectElemList\">\n        {buildProjectElemList(\n          projectObjectsArr,\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Nav;\n","// react\nimport React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\n// redux\nimport { updateProjectObjArr } from './redux/actions/projectActions';\n// components\nimport Body from './components/body/Body';\nimport Nav from './components/Nav';\n// constants\nimport { projectObjectsArr } from './projectObjectsArr';\n\n/**\n * main\n */\nconst App = () => {\n  // init hooks\n  const dispatch = useDispatch();\n  // effects\n  useEffect(() => {\n    // update\n    console.log('projectObjectsArr', projectObjectsArr)\n    dispatch(updateProjectObjArr(projectObjectsArr))\n  }, [])\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Body />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// react\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n// redux\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n// components\nimport App from \"./App\";\n// utils\nimport reportWebVitals from \"./reportWebVitals\";\n// styling\nimport \"./App.css\";\n\n/**\n * main\n */\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}